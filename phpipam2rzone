#!/usr/bin/env php
<?php
// -----------------------------------------------------------------------------
// Usage: $ ./phpipam2rzone [--no-vlan] [--no-header] <subnet>
//
// Example:
//        $ ./phpipam2rzone 147.251.90.0/24
//
// Output file:
//        db.147.251.90
// -----------------------------------------------------------------------------

printf("\n");

$arg_start=1;
$nargs = $argc;
$print_header = true;
$no_vlan = false;

if( $nargs > 1 ){
    if( $argv[$arg_start] == "--no-vlan" ){
        $arg_start=2;
        $nargs--;
        $no_vlan = true;
    }
}

if( $nargs > 1 ){
    if( $argv[$arg_start] == "--no-header" ){
        $arg_start=2;
        $nargs--;
        $print_header = false;
    }
}

if( $nargs == 1 ){
    printf(">>> ERROR: No subnet specified!\n\n");
    exit(1);
}

// subnet is the first argument
$subnet = $argv[$arg_start];
if( $subnet == "" ) {
    printf(">>> ERROR: Master subnet not specified!\n\n");
    exit(1);
}

printf("SubNet: %s\n",$subnet);

// access to phpIPAM api
include 'phpipam.conf';

// -----------------------------------------------------------------------------

require_once(__DIR__ . '/extras/lib.php');

// -----------------------------------------------------------------------------

function print_header()
{          
    printf("\n");          
    printf("ST   Id           IP               HostName              \n");          
    printf("-- ------ ------------------ --------------------------- \n");
}

// -----------------------------------------------------------------------------

function print_data()
{
    global $hosts, $dhcp_classes, $subnet_data;

    print_header();
    
    foreach($hosts->data as $item){
        if( ( $item->ip != "" ) && ( $item->hostname != "" ) ){
            printf("%2s % 5d | %-16s | %-25s \n",'',$item->id,$item->ip,get_host_fqdn($item));
        }
    }
    
    printf("\n");  
}

// -----------------------------------------------------------------------------

function generate_header($fh)
{
    global $url, $subnet_data, $subnet, $vlan_data, $ip_items ;
    
    fprintf($fh,"; -----------------------------------------------------------------------------\n");
    fprintf($fh,"; GENERATED BY phpipam2rzone - DO NOT EDIT\n");
    fprintf($fh,"; -----------------------------------------------------------------------------\n"); 
    fprintf($fh,"; data source: %s\n",$url);    
    fprintf($fh,"; date       : %s\n",date("Y-m-d H:i:s"));  
    fprintf($fh,"; subnet     : %s\n",$subnet);
    fprintf($fh,"; admin      : %s\n",$subnet_data->data->custom_Admin);
    fprintf($fh,"; tech admin : %s\n",$subnet_data->data->custom_TechAdmin);
    if( $subnet_data->data->custom_NSAdmin != "" ){
    fprintf($fh,"; dns admin  : %s\n",$subnet_data->data->custom_NSAdmin);
    }
    if( $subnet_data->data->custom_DHCPAdmin != "" ){
    fprintf($fh,"; dhcp admin : %s\n",$subnet_data->data->custom_DHCPAdmin);
    }
    if( $subnet_data->data->custom_SecAlerts != "" ){
    fprintf($fh,"; sec-alerts : %s\n",$subnet_data->data->custom_SecAlerts);
    }
    fprintf($fh,"; -----------------------------------------------------------------------------\n");    

    $ns_list = explode(",",$subnet_data->data->custom_NS);
    if( (count($ns_list) < 1) || ($ns_list[0] == "") ){
        printf(">>> ERROR: NS record is not set for subnet!\n\n");
        exit(1);
    }

    fprintf($fh,"\n");
    fprintf($fh,"\$ORIGIN %d.%d.%d.in-addr.arpa.\n",$ip_items[2],$ip_items[1],$ip_items[0]);
    fprintf($fh,"\$TTL 86400\n");
    fprintf($fh,"@   IN  SOA %s.   %s. (\n",trim($ns_list[0]),str_replace("@",".",$subnet_data->data->custom_TechAdmin));
    fprintf($fh,"            %s ; serial\n",date("ymdHi"));
    fprintf($fh,"            21600      ; refresh after 6 hours\n");
    fprintf($fh,"            3600       ; retry after 1 hour\n");
    fprintf($fh,"            604800     ; expire after 1 week\n");
    fprintf($fh,"            86400 )    ; minimum TTL of 1 day\n");

    fprintf($fh,"\n");
    fprintf($fh,"; zone setup\n");
    foreach($ns_list as $ns){
        fprintf($fh,"   IN  NS  %s.\n",trim($ns));
    }
}

// -----------------------------------------------------------------------------

function generate_group($fh)
{
    global $hosts, $dns_domain, $subnet, $vlan_data, $subnet_data, $no_vlan;

    fprintf($fh,"\n");
    fprintf($fh,"; subnet     : %s\n",$subnet);
    if( $no_vlan == false ){
        fprintf($fh,"; vlan       : %d (%s)\n",$vlan_data->data->number, $vlan_data->data->name);
    }
    fprintf($fh,"; admin      : %s\n",$subnet_data->data->custom_Admin);
    fprintf($fh,"; tech admin : %s\n",$subnet_data->data->custom_TechAdmin);
    if( $subnet_data->data->custom_NSAdmin != "" ){
    fprintf($fh,"; dns admin  : %s\n",$subnet_data->data->custom_NSAdmin);
    }
    if( $subnet_data->data->custom_DHCPAdmin != "" ){
    fprintf($fh,"; dhcp admin : %s\n",$subnet_data->data->custom_DHCPAdmin);
    }
    fprintf($fh,"; sec-alerts : %s\n",$subnet_data->data->custom_SecAlerts);
    fprintf($fh,"; -----------------------------------------------------------------------------\n");
        
    foreach($hosts->data as $item){
        if( ( $item->ip == "" ) || ( $item->hostname == "" ) ) continue;
        fprintf($fh,"\n");
        $ip_items = explode(".", $item->ip);
        fprintf($fh,"%-3d  IN  PTR  %s.\n",$ip_items[3],get_host_fqdn($item)); 
        if( $item->location > 0 ){
        fprintf($fh,"   ; Location:  %s\n",get_location_name($item->location));
        }
        if( ($item->port != "") || ($item->deviceId != 0) ){
        fprintf($fh,"   ; Plug/port: %s\n",get_host_plug($item));
        }
        fprintf($fh,"   ; Admin:     %s\n",get_host_admin($item));
        if( $item->custom_User != "" ){
        fprintf($fh,"   ; User:      %s\n",$item->custom_User);
        }
        if( $item->custom_Group != "" ){
        fprintf($fh,"   ; Group:     %s\n",$item->custom_Group);
        }
        if( $item->custom_Cluster != "" ){        
        fprintf($fh,"   ; Cluster:   %s\n",$item->custom_Cluster);
        }
        if( $item->custom_OS != "" ){ 
        fprintf($fh,"   ; OS:        %s\n",$item->custom_OS);
        }
        if( $item->custom_AssetNo != "" ){
        fprintf($fh,"   ; Asset no:  %s\n",$item->custom_AssetNo);
        }
        fprintf($fh,"   ; IP:        %s\n",$item->ip);
    }
    
    fprintf($fh,"\n");   
}

// -----------------------------------------------------------------------------

init_session();
get_subnetid();
get_subnet();
$dns_domain = $subnet_data->data->custom_Domain;

$subnet_items = explode("/", $subnet);
$ip_items = explode(".", $subnet_items[0]);

if( $ip_items[3] != 0 ){
    printf("\n>>> ERROR: Last digit in IP address %s of subnet must be zero!\n\n",$subnet_items[0]);
    exit(1);
}

if( $print_header ){

    $rzone_conf = sprintf("db.%d.%d.%d",$ip_items[0],$ip_items[1],$ip_items[2]);

    printf("\n"); 
    printf("Generating reverse zone configuration: %s\n",$rzone_conf);

    $fh = fopen($rzone_conf,"w");
    if( $fh == false ){
        printf(">>> ERROR: Unable to open %s for writing!\n\n",$rzone_conf);
        exit(1);
    }

    generate_header($fh);
}

if( $nargs == 2 ){
    $start = $arg_start;
} else {
    $start = $arg_start+1;
}

for($i=$start;$i<$argc;$i++){
    $subnet = $argv[$i];
    if( $subnet == "" ) {
        printf(">>> ERROR: Child subnet not specified!\n\n");
        exit(1);
    }
    get_subnetid();
    get_subnet();
    if( $no_vlan == false ){
        get_vlan();
    }

    if( ! $print_header ){
        $subnet_items = explode("/", $subnet);
        $ip_items = explode(".", $subnet_items[0]);
        if( $no_vlan == false ){
            $rzone_conf = sprintf("db.%d.%d.%d.vlan%d",$ip_items[0],$ip_items[1],$ip_items[2],$vlan_data->data->number);
        } else {
            $rzone_conf = sprintf("db.%d.%d.%d",$ip_items[0],$ip_items[1],$ip_items[2]);
        }

        printf("\n"); 
        printf("Generating reverse zone configuration: %s\n",$rzone_conf);
    
        $fh = fopen($rzone_conf,"w");
        if( $fh == false ){
            printf(">>> ERROR: Unable to open %s for writing!\n\n",$rzone_conf);
            exit(1);
        }
    }

    get_hosts();
    print_data();
    if( $subnet_data->data->custom_Domain != $dns_domain ){
        printf(">>> ERROR: Subnet %s is from different domain!\n\n",$subnet);
        exit(1);
    }
    generate_group($fh);
    if( ! $print_header ){
        fclose($fh);
    }
}

if( $print_header ){
    fclose($fh);
}

printf("Done!\n");
printf("\n");   

?>
