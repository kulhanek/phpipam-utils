#!/usr/bin/env php
<?php
// -----------------------------------------------------------------------------
// Usage: $ ./updateaddresses <subnet>
// -----------------------------------------------------------------------------

printf("\n");

// subnet is the first argument
if( count($argv) != 2 ){
    printf(">>> ERROR: Subnet not specified!\n\n");
    exit(1);
}

$subnet = $argv[1];
if( $subnet == "" ) {
    printf(">>> ERROR: Subnet not specified!\n\n");
    exit(1);
}
printf("SubNet: %s\n",$subnet);

// access to phpIPAM api
include 'phpipam.conf';

// -----------------------------------------------------------------------------

$subnetid = 0;
$token = "";
$hosts = "";

// -----------------------------------------------------------------------------

function init_session()
{   
    global $url, $username, $passwd, $token;

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url . "user/");
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_USERPWD, "$username:$passwd");
    curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

    $server_output = curl_exec ($ch);
    
    if( $server_output == FALSE ){
        printf(">>> ERROR: Unable to connect to IPAM: %s\n\n",curl_error($ch));
        curl_close ($ch);
        exit(1);
    }    

    curl_close ($ch);
    
    $json = json_decode($server_output);
    
    $token = $json->data->token;
    
    //printf("Session token: %s\n",$token);
}

// -----------------------------------------------------------------------------

function get_subnetid()
{   
    global $url, $token, $subnetid, $subnet;

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url . "subnets/cidr/" . $subnet ."/");
    curl_setopt($ch, CURLOPT_HTTPGET, true);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $headers = [
        "token: $token"
    ];
    
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);    

    $server_output = curl_exec ($ch);
    
    if( $server_output == FALSE ){
        printf(">>> ERROR: Unable to connect to IPAM: %s\n\n",curl_error($ch));
        curl_close ($ch);
        exit(1);
    }    

    curl_close ($ch);
    
    $subnet_data = json_decode($server_output);
    
    if( $subnet_data->success == false ){
        printf(">>> ERROR: Unable to get subnet id for %s\n\n",$subnet);
        var_dump($subnet_data); 
        exit(1);
    }    
    
    $subnetid = $subnet_data->data[0]->id;
}

// -----------------------------------------------------------------------------

function get_hosts()
{   
    global $url, $token, $subnetid, $subnet, $hosts;

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url . "subnets/" . $subnetid ."/addresses/");
    curl_setopt($ch, CURLOPT_HTTPGET, true);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $headers = [
        "token: $token"
    ];
    
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);    

    $server_output = curl_exec ($ch);
    
    if( $server_output == FALSE ){
        printf(">>> ERROR: Unable to connect to IPAM: %s\n\n",curl_error($ch));
        curl_close ($ch);
        exit(1);
    }    

    curl_close ($ch);
    
    $hosts = json_decode($server_output);
    
    if( $hosts->success == false ){
        printf(">>> ERROR: Unable to get hosts for %s\n\n",$subnet);
        var_dump($hosts); 
        exit(1);
    }  
    
    var_dump($hosts);
}

// -----------------------------------------------------------------------------

function update_host($item)
{      
    global $url, $token, $subnet;

    // UPDATE ADDRESS DATA    
    $data = [ "location" => "1"
            ];
    $data_string = json_encode($data);
        
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url . "addresses/" . $item->id . "/");
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PATCH");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data_string);
    
    $headers = [
        "token: $token",
        "Content-Type: application/json",
        'Content-Length: ' . strlen($data_string)
    ];
    
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);  
    
    $server_output = curl_exec ($ch);
    
    if( $server_output == FALSE ){
        printf(">>> ERROR: Unable to connect to IPAM: %s\n\n",curl_error($ch));
        curl_close ($ch);
        exit(1);
    }    

    curl_close ($ch);
    
    $server_json = json_decode($server_output);
    
    if( $server_json->success == false ){
        printf(">>> ERROR: Unable to update address %s for %s\n\n",$item->ip,$subnet);
        var_dump($server_json); 
        exit(1);
    } 
    
    //var_dump($server_json);
}

// -----------------------------------------------------------------------------

function print_header()
{
          //   11 | 147.251.84.1     | ukb-cp.mgmt.ics.muni.cz   | ukb-cp.mgmt.ics.muni.cz   | 00:c1:64:c5:bb:40 | 00:c1:64:c5:bb:40
          
    printf("\n");          
    printf("ST   Id           IP                     Name           \n");          
    printf("-- ------ ------------------ ---------------------------\n");
}

// -----------------------------------------------------------------------------

function update_data()
{
    global $hosts;

    print_header();
    
    foreach($hosts->data as $item){
        printf("%2s % 5d | %-16s | %-25s\n",'',$item->id,$item->ip,$item->hostname);
        update_host($item);
    }
}



// -----------------------------------------------------------------------------

init_session();
get_subnetid();
get_hosts();
update_data();

printf("\n");   

?>
